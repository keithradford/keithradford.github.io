{"version":3,"sources":["app/landing/Landing.tsx","app/projects/components/Table.tsx","app/projects/Projects.tsx","app/work/components/Table.tsx","app/work/Work.tsx","app/about/About.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Landing","justifyContent","alignItems","h","bgRepeat","bgSize","bgImg","process","flexDirection","color","mt","as","fontSize","fontFamily","fontWeight","mb","mr","id","aria-label","icon","size","isRound","colorScheme","href","target","to","smooth","Project","name","languages","links","linkDisplay","map","link","i","length","join","rel","style","textDecoration","Table","bg","Projects","useState","show","setShow","alignContent","w","onClick","borderRadius","align","in","position","date","experience","Work","About","minH","my","src","p","App","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e33a1b8d.chunk.js","sourcesContent":["import { Heading, Flex, IconButton, HStack, Spacer } from \"@chakra-ui/react\";\r\nimport { Link as Scroll } from \"react-scroll\";\r\nimport { VscChevronDown } from \"react-icons/vsc\";\r\nimport { FaLinkedinIn, FaGithubAlt } from \"react-icons/fa\";\r\n\r\nexport function Landing(): JSX.Element | null {\r\n  return (\r\n    <Flex\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      h=\"100vh\"\r\n      bgRepeat=\"no-repeat\"\r\n      bgSize=\"cover\"\r\n      bgImg={`url(${process.env.PUBLIC_URL + \"/assets/background.jpg\"})`}\r\n      flexDirection=\"column\"\r\n      color=\"white\"\r\n    >\r\n      <HStack mt=\"1rem\">\r\n        <Heading\r\n          as=\"h1\"\r\n          fontSize=\"4.5rem\"\r\n          fontFamily=\"Open Sans\"\r\n          fontWeight=\"bold\"\r\n          mb=\"1rem\"\r\n          mr=\"1rem\"\r\n        >\r\n          Keith Radford\r\n        </Heading>\r\n        <IconButton\r\n          id=\"social\"\r\n          aria-label=\"github\"\r\n          icon={<FaGithubAlt />}\r\n          size=\"lg\"\r\n          isRound\r\n          colorScheme=\"whiteAlpha\"\r\n          fontSize=\"30px\"\r\n          as=\"a\"\r\n          href=\"https://github.com/keithradford\"\r\n          target=\"_blank\"\r\n        />\r\n        <Spacer />\r\n        <IconButton\r\n          id=\"social\"\r\n          aria-label=\"linkedin\"\r\n          icon={<FaLinkedinIn />}\r\n          size=\"lg\"\r\n          isRound\r\n          colorScheme=\"whiteAlpha\"\r\n          fontSize=\"30px\"\r\n          as=\"a\"\r\n          href=\"https://www.linkedin.com/in/keith-radford/\"\r\n          target=\"_blank\"\r\n        />\r\n      </HStack>\r\n      <Heading\r\n        fontSize=\"1.3rem\"\r\n        fontWeight=\"bold\"\r\n        mt=\"0\"\r\n        fontFamily=\"Open Sans\"\r\n      >\r\n        Software Engineering Student at the University of Victoria\r\n      </Heading>\r\n      <Scroll to=\"info\" smooth={true}>\r\n        <IconButton\r\n          mt=\"2.3rem\"\r\n          aria-label=\"scroll-button\"\r\n          icon={<VscChevronDown />}\r\n          size=\"lg\"\r\n          isRound\r\n          colorScheme=\"whiteAlpha\"\r\n          id=\"down\"\r\n          fontSize=\"30px\"\r\n        />\r\n      </Scroll>\r\n    </Flex>\r\n  );\r\n}\r\n","import {\r\n  Table as ChakraTable,\r\n  Tbody,\r\n  Td,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n} from \"@chakra-ui/react\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  languages: string[];\r\n  links: { name: string; link: string }[];\r\n};\r\n\r\nfunction Project({ name, languages, links }: Props) {\r\n  const linkDisplay = links.map((link, i) => {\r\n    if (i === links.length - 1) return link;\r\n    return { ...link, name: link.name + \",\" };\r\n  });\r\n\r\n  return (\r\n    <Tr>\r\n      <Td>{name}</Td>\r\n      <Td>{languages.join(\", \")}</Td>\r\n      <Td>\r\n        {linkDisplay.map((link) => {\r\n          return (\r\n            <>\r\n              <a\r\n                href={link.link}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                style={{ color: \"blue\", textDecoration: \"underline\" }}\r\n              >\r\n                {link.name}\r\n              </a>\r\n              <p> </p>\r\n            </>\r\n          );\r\n        })}\r\n      </Td>\r\n    </Tr>\r\n  );\r\n}\r\n\r\nexport function Table() {\r\n  return (\r\n    <ChakraTable bg=\"white\">\r\n      <Thead>\r\n        <Tr>\r\n          <Th>Name</Th>\r\n          <Th>Languages and Tools</Th>\r\n          <Th>Relevant Links</Th>\r\n        </Tr>\r\n      </Thead>\r\n      <Tbody>\r\n        <Project\r\n          name=\"UVic Course Scraper\"\r\n          languages={[\"Node.js\", \"TypeScript\"]}\r\n          links={[\r\n            {\r\n              name: \"GitHub Repo\",\r\n              link: \"https://github.com/VikeLabs/uvic-course-scraper\",\r\n            },\r\n            {\r\n              name: \"npm page\",\r\n              link:\r\n                \"https://www.npmjs.com/package/@vikelabs/uvic-course-scraper\",\r\n            },\r\n          ]}\r\n        />\r\n        <Project\r\n          name=\"Clockwork\"\r\n          languages={[\"ReactJS\", \"TypeScript\", \"Firebase\"]}\r\n          links={[\r\n            {\r\n              name: \"GitHub Repo\",\r\n              link: \"https://github.com/VikeLabs/clockwork\",\r\n            },\r\n            { name: \"Website\", link: \"https://clockwork.vikelabs.dev/\" },\r\n          ]}\r\n        />\r\n        <Project\r\n          name=\"Terminal Chess\"\r\n          languages={[\"Java\"]}\r\n          links={[\r\n            {\r\n              name: \"GitHub Repo\",\r\n              link: \"https://github.com/keithradford/terminal-chess\",\r\n            },\r\n          ]}\r\n        />\r\n      </Tbody>\r\n    </ChakraTable>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Collapse,\r\n  Flex,\r\n  Text,\r\n  VStack,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { VscChevronDown, VscChevronUp } from \"react-icons/vsc\";\r\nimport { Table } from \"./components/Table\";\r\n\r\nexport function Projects() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleToggle = () => setShow(!show);\r\n  return (\r\n    <VStack alignContent=\"center\">\r\n      <Box w=\"70%\">\r\n        <Button\r\n          onClick={handleToggle}\r\n          mt=\"1rem\"\r\n          w=\"100%\"\r\n          borderRadius=\"0\"\r\n          alignContent=\"left\"\r\n        >\r\n          <Flex align=\"left\" w=\"100%\">\r\n            <Text>Projects and contributions</Text>\r\n            <Spacer />\r\n            {show ? <VscChevronUp /> : <VscChevronDown />}\r\n          </Flex>\r\n        </Button>\r\n        <Collapse in={show}>\r\n          <Table />\r\n        </Collapse>\r\n      </Box>\r\n    </VStack>\r\n  );\r\n}\r\n","import {\r\n  Table as ChakraTable,\r\n  Tbody,\r\n  Td,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n} from \"@chakra-ui/react\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  position: string;\r\n  experience: string[];\r\n  date: string;\r\n};\r\n\r\nfunction Project({ name, position, experience, date }: Props) {\r\n  return (\r\n    <Tr>\r\n      <Td>{name}</Td>\r\n      <Td>{position}</Td>\r\n      {/* <Td>{experience.join(\", \")}</Td> */}\r\n      <Td>{date}</Td>\r\n    </Tr>\r\n  );\r\n}\r\n\r\nexport function Table() {\r\n  return (\r\n    <ChakraTable bg=\"white\">\r\n      <Thead>\r\n        <Tr>\r\n          <Th>Company</Th>\r\n          <Th>Position</Th>\r\n          {/* <Th>Relevant Experience</Th> */}\r\n          <Th>Date</Th>\r\n        </Tr>\r\n      </Thead>\r\n      <Tbody>\r\n        <Project\r\n          name=\"Rooof\"\r\n          position=\"Integration Engineer - Co-op\"\r\n          experience={[\"Python\", \"Web-Scraping\"]}\r\n          date=\"January 2020 - April 2020\"\r\n        />\r\n        <Project\r\n          name=\"Change.org\"\r\n          position=\"Software Engineer - Co-op\"\r\n          experience={[\"ReactJS\", \"TypeScript\", \"Ruby on Rails\"]}\r\n          date=\"January 2021 - August 2021\"\r\n        />\r\n      </Tbody>\r\n    </ChakraTable>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Collapse,\r\n  Flex,\r\n  Text,\r\n  VStack,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { VscChevronDown, VscChevronUp } from \"react-icons/vsc\";\r\nimport { Table } from \"./components/Table\";\r\n\r\nexport function Work() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleToggle = () => setShow(!show);\r\n  return (\r\n    <VStack alignContent=\"center\">\r\n      <Box w=\"70%\">\r\n        <Button\r\n          onClick={handleToggle}\r\n          mt=\"1rem\"\r\n          w=\"100%\"\r\n          borderRadius=\"0\"\r\n          alignContent=\"left\"\r\n        >\r\n          <Flex align=\"left\" w=\"100%\">\r\n            <Text>Work experience</Text>\r\n            <Spacer />\r\n            {show ? <VscChevronUp /> : <VscChevronDown />}\r\n          </Flex>\r\n        </Button>\r\n        <Collapse in={show}>\r\n          <Table />\r\n        </Collapse>\r\n      </Box>\r\n    </VStack>\r\n  );\r\n}\r\n","import { Image, Center, HStack, Text, Spacer } from \"@chakra-ui/react\";\r\n\r\nexport function About() {\r\n  return (\r\n    <Center minH=\"fit-content\" my={20}>\r\n      <HStack w=\"70%\">\r\n        <Image\r\n          src={`${process.env.PUBLIC_URL + \"/assets/keith.JPG\"}`}\r\n          h=\"250px\"\r\n          borderRadius=\"50%\"\r\n        />\r\n        <Spacer />\r\n        <Center bg=\"white\" borderRadius=\"25px\" h=\"200px\" p={5}>\r\n          <Text>\r\n            My name is Keith Radford and I am a 3rd year student studying\r\n            Software Engineering at the University of Victoria.\r\n            <br />I am 20 years old and have a passion for computers, software,\r\n            and sports. Throughout my studies in 1st year Engineering at UVic,\r\n            learning fundamentals of programming in the languages C and Java, my\r\n            interest for programming grew exponentially. This lead me to pursue\r\n            Software Engineering and begin to learn, study, and work in the\r\n            field of computer science.\r\n          </Text>\r\n        </Center>\r\n      </HStack>\r\n    </Center>\r\n  );\r\n}\r\n","import { Landing } from \"./app/landing/Landing\";\r\nimport { Projects } from \"./app/projects/Projects\";\r\nimport { Work } from \"./app/work/Work\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { About } from \"./app/about/About\";\r\n\r\nexport function App(): JSX.Element | null {\r\n  return (\r\n    <Box bg=\"#353535\">\r\n      <Landing />\r\n      <About />\r\n      <Box minH=\"100vh\" id=\"info\">\r\n        <Projects />\r\n        <Work />\r\n      </Box>\r\n      <footer style={{ textAlign: \"center\", color: \"whitesmoke\" }}>\r\n        &copy; 2021 Keith Radford\r\n      </footer>\r\n    </Box>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <App />\r\n  </ChakraProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}